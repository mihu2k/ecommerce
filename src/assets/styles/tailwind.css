/*! tailwindcss v2.2.15 | MIT License | https://tailwindcss.com *//*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
::before,
::after {
	box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
	tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
	line-height: 1.15; /* 1 */
	-webkit-text-size-adjust: 100%; /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
	margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
	font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
	height: 0; /* 1 */
	color: inherit; /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
	text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
	font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
	font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace; /* 1 */
	font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
	font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
	text-indent: 0; /* 1 */
	border-color: inherit; /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
	font-family: inherit; /* 1 */
	font-size: 100%; /* 1 */
	line-height: 1.15; /* 1 */
	margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select { /* 1 */
	text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
	-webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

::-moz-focus-inner {
	border-style: none;
	padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

:-moz-focusring {
	outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

:-moz-ui-invalid {
	box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
	padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
	vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
	-webkit-appearance: textfield; /* 1 */
	outline-offset: -2px; /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
	-webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

::-webkit-file-upload-button {
	-webkit-appearance: button; /* 1 */
	font: inherit; /* 2 */
}

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
	display: list-item;
}/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 1 */
  line-height: 1.5; /* 2 */
}


/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: currentColor; /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

button,
[role="button"] {
  cursor: pointer;
}

/**
 * Override legacy focus reset from Normalize with modern Firefox focus styles.
 *
 * This is actually an improvement over the new defaults in Firefox in our testing,
 * as it triggers the better focus styles even for links, which still use a dotted
 * outline in Firefox by default.
 */
 
:-moz-focusring {
	outline: auto;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

/**
 * Ensure the default browser behavior of the `hidden` attribute.
 */

[hidden] {
  display: none;
}

*, ::before, ::after {
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	--tw-border-opacity: 1;
	border-color: rgba(229, 231, 235, var(--tw-border-opacity));
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-blur: var(--tw-empty,/*!*/ /*!*/);
	--tw-brightness: var(--tw-empty,/*!*/ /*!*/);
	--tw-contrast: var(--tw-empty,/*!*/ /*!*/);
	--tw-grayscale: var(--tw-empty,/*!*/ /*!*/);
	--tw-hue-rotate: var(--tw-empty,/*!*/ /*!*/);
	--tw-invert: var(--tw-empty,/*!*/ /*!*/);
	--tw-saturate: var(--tw-empty,/*!*/ /*!*/);
	--tw-sepia: var(--tw-empty,/*!*/ /*!*/);
	--tw-drop-shadow: var(--tw-empty,/*!*/ /*!*/);
	--tw-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.invisible {
	visibility: hidden;
}
.fixed {
	position: fixed;
}
.absolute {
	position: absolute;
}
.relative {
	position: relative;
}
.sticky {
	position: sticky;
}
.top-\[-1px\] {
	top: -1px;
}
.left-\[-1px\] {
	left: -1px;
}
.bottom-\[-1px\] {
	bottom: -1px;
}
.top-0 {
	top: 0px;
}
.left-0 {
	left: 0px;
}
.right-0 {
	right: 0px;
}
.right-4 {
	right: 1rem;
}
.top-\[-2px\] {
	top: -2px;
}
.top-full {
	top: 100%;
}
.top-3 {
	top: 0.75rem;
}
.left-\[-4px\] {
	left: -4px;
}
.bottom-0 {
	bottom: 0px;
}
.z-\[1\] {
	z-index: 1;
}
.z-\[2\] {
	z-index: 2;
}
.col-span-1 {
	grid-column: span 1 / span 1;
}
.col-span-5 {
	grid-column: span 5 / span 5;
}
.mx-auto {
	margin-left: auto;
	margin-right: auto;
}
.my-8 {
	margin-top: 2rem;
	margin-bottom: 2rem;
}
.my-2 {
	margin-top: 0.5rem;
	margin-bottom: 0.5rem;
}
.mx-4 {
	margin-left: 1rem;
	margin-right: 1rem;
}
.my-\[5px\] {
	margin-top: 5px;
	margin-bottom: 5px;
}
.mx-1 {
	margin-left: 0.25rem;
	margin-right: 0.25rem;
}
.mt-\[120px\] {
	margin-top: 120px;
}
.ml-2 {
	margin-left: 0.5rem;
}
.mb-4 {
	margin-bottom: 1rem;
}
.mt-2 {
	margin-top: 0.5rem;
}
.mb-\[10px\] {
	margin-bottom: 10px;
}
.mr-2 {
	margin-right: 0.5rem;
}
.mt-6 {
	margin-top: 1.5rem;
}
.ml-\[-5px\] {
	margin-left: -5px;
}
.ml-\[5px\] {
	margin-left: 5px;
}
.mr-3 {
	margin-right: 0.75rem;
}
.mt-4 {
	margin-top: 1rem;
}
.mr-4 {
	margin-right: 1rem;
}
.mt-\[1px\] {
	margin-top: 1px;
}
.ml-1 {
	margin-left: 0.25rem;
}
.ml-4 {
	margin-left: 1rem;
}
.mt-1 {
	margin-top: 0.25rem;
}
.mr-\[3px\] {
	margin-right: 3px;
}
.mb-1 {
	margin-bottom: 0.25rem;
}
.ml-8 {
	margin-left: 2rem;
}
.ml-auto {
	margin-left: auto;
}
.mb-3 {
	margin-bottom: 0.75rem;
}
.mb-2 {
	margin-bottom: 0.5rem;
}
.mt-\[6px\] {
	margin-top: 6px;
}
.ml-\[2px\] {
	margin-left: 2px;
}
.mt-\[5px\] {
	margin-top: 5px;
}
.mr-\[6px\] {
	margin-right: 6px;
}
.block {
	display: block;
}
.inline-block {
	display: inline-block;
}
.flex {
	display: flex;
}
.inline-flex {
	display: inline-flex;
}
.grid {
	display: grid;
}
.hidden {
	display: none;
}
.h-14 {
	height: 3.5rem;
}
.h-full {
	height: 100%;
}
.h-\[18px\] {
	height: 18px;
}
.h-10 {
	height: 2.5rem;
}
.h-28 {
	height: 7rem;
}
.h-8 {
	height: 2rem;
}
.h-\[10px\] {
	height: 10px;
}
.h-12 {
	height: 3rem;
}
.h-5 {
	height: 1.25rem;
}
.h-20 {
	height: 5rem;
}
.h-\[120px\] {
	height: 120px;
}
.h-4 {
	height: 1rem;
}
.h-\[45px\] {
	height: 45px;
}
.h-\[34px\] {
	height: 34px;
}
.h-\[42px\] {
	height: 42px;
}
.h-\[100px\] {
	height: 100px;
}
.h-\[180px\] {
	height: 180px;
}
.h-\[50px\] {
	height: 50px;
}
.h-3 {
	height: 0.75rem;
}
.max-h-\[360px\] {
	max-height: 360px;
}
.min-h-screen {
	min-height: 100vh;
}
.w-\[18px\] {
	width: 18px;
}
.w-\[14\%\] {
	width: 14%;
}
.w-\[12\%\] {
	width: 12%;
}
.w-\[210px\] {
	width: 210px;
}
.w-28 {
	width: 7rem;
}
.w-\[450px\] {
	width: 450px;
}
.w-full {
	width: 100%;
}
.w-\[10px\] {
	width: 10px;
}
.w-\[50px\] {
	width: 50px;
}
.w-5 {
	width: 1.25rem;
}
.w-20 {
	width: 5rem;
}
.w-36 {
	width: 9rem;
}
.w-\[400px\] {
	width: 400px;
}
.w-\[42px\] {
	width: 42px;
}
.w-\[100px\] {
	width: 100px;
}
.w-\[184px\] {
	width: 184px;
}
.w-\[70px\] {
	width: 70px;
}
.w-\[72px\] {
	width: 72px;
}
.w-\[402px\] {
	width: 402px;
}
.w-10 {
	width: 2.5rem;
}
.w-4 {
	width: 1rem;
}
.w-9 {
	width: 2.25rem;
}
.w-\[162px\] {
	width: 162px;
}
.w-3 {
	width: 0.75rem;
}
.min-w-max {
	min-width: max-content;
}
.max-w-\[1280px\] {
	max-width: 1280px;
}
.max-w-\[150px\] {
	max-width: 150px;
}
.flex-shrink-0 {
	flex-shrink: 0;
}
.flex-grow {
	flex-grow: 1;
}
.translate-y-\[-2px\] {
	--tw-translate-y: -2px;
	transform: var(--tw-transform);
}
.translate-y-\[1px\] {
	--tw-translate-y: 1px;
	transform: var(--tw-transform);
}
.transform {
	transform: var(--tw-transform);
}
.cursor-pointer {
	cursor: pointer;
}
.cursor-not-allowed {
	cursor: not-allowed;
}
.cursor-default {
	cursor: default;
}
.cursor-auto {
	cursor: auto;
}
.select-none {
	-webkit-user-select: none;
	        user-select: none;
}
.grid-cols-6 {
	grid-template-columns: repeat(6, minmax(0, 1fr));
}
.grid-cols-5 {
	grid-template-columns: repeat(5, minmax(0, 1fr));
}
.flex-col {
	flex-direction: column;
}
.flex-wrap {
	flex-wrap: wrap;
}
.items-start {
	align-items: flex-start;
}
.items-center {
	align-items: center;
}
.items-baseline {
	align-items: baseline;
}
.justify-center {
	justify-content: center;
}
.justify-between {
	justify-content: space-between;
}
.gap-x-5 {
	column-gap: 1.25rem;
}
.gap-x-\[10px\] {
	column-gap: 10px;
}
.divide-x-\[2px\] > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-x-reverse: 0;
	border-right-width: calc(2px * var(--tw-divide-x-reverse));
	border-left-width: calc(2px * calc(1 - var(--tw-divide-x-reverse)));
}
.divide-x > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-x-reverse: 0;
	border-right-width: calc(1px * var(--tw-divide-x-reverse));
	border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}
.divide-\[\#f1f1f1\] > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-opacity: 1;
	border-color: rgba(241, 241, 241, var(--tw-divide-opacity));
}
.self-start {
	align-self: flex-start;
}
.overflow-hidden {
	overflow: hidden;
}
.overflow-y-auto {
	overflow-y: auto;
}
.rounded {
	border-radius: 0.25rem;
}
.rounded-sm {
	border-radius: 0.125rem;
}
.rounded-none {
	border-radius: 0px;
}
.rounded-full {
	border-radius: 9999px;
}
.rounded-\[3px\] {
	border-radius: 3px;
}
.rounded-tl-sm {
	border-top-left-radius: 0.125rem;
}
.rounded-tr-sm {
	border-top-right-radius: 0.125rem;
}
.rounded-br-sm {
	border-bottom-right-radius: 0.125rem;
}
.border {
	border-width: 1px;
}
.border-2 {
	border-width: 2px;
}
.border-b {
	border-bottom-width: 1px;
}
.border-l {
	border-left-width: 1px;
}
.border-r {
	border-right-width: 1px;
}
.border-gray-300 {
	--tw-border-opacity: 1;
	border-color: rgba(209, 213, 219, var(--tw-border-opacity));
}
.border-transparent {
	border-color: transparent;
}
.border-gray-200 {
	--tw-border-opacity: 1;
	border-color: rgba(229, 231, 235, var(--tw-border-opacity));
}
.border-primary {
	border-color: var(--primary-color);
}
.border-gray-700 {
	--tw-border-opacity: 1;
	border-color: rgba(55, 65, 81, var(--tw-border-opacity));
}
.border-gray-100 {
	--tw-border-opacity: 1;
	border-color: rgba(243, 244, 246, var(--tw-border-opacity));
}
.border-red-500 {
	--tw-border-opacity: 1;
	border-color: rgba(239, 68, 68, var(--tw-border-opacity));
}
.bg-gray-100 {
	--tw-bg-opacity: 1;
	background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
}
.bg-white {
	--tw-bg-opacity: 1;
	background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}
.bg-primary {
	background-color: var(--primary-color);
}
.bg-gray-50 {
	--tw-bg-opacity: 1;
	background-color: rgba(249, 250, 251, var(--tw-bg-opacity));
}
.bg-\[\#ffeee8\] {
	--tw-bg-opacity: 1;
	background-color: rgba(255, 238, 232, var(--tw-bg-opacity));
}
.bg-\[\#fefefe\] {
	--tw-bg-opacity: 1;
	background-color: rgba(254, 254, 254, var(--tw-bg-opacity));
}
.bg-gray-200 {
	--tw-bg-opacity: 1;
	background-color: rgba(229, 231, 235, var(--tw-bg-opacity));
}
.bg-\[\#d0011b\] {
	--tw-bg-opacity: 1;
	background-color: rgba(208, 1, 27, var(--tw-bg-opacity));
}
.fill-current {
	fill: currentColor;
}
.stroke-current {
	stroke: currentColor;
}
.object-contain {
	object-fit: contain;
}
.p-4 {
	padding: 1rem;
}
.p-\[5px\] {
	padding: 5px;
}
.p-5 {
	padding: 1.25rem;
}
.p-3 {
	padding: 0.75rem;
}
.p-\[10px\] {
	padding: 10px;
}
.p-\[2px\] {
	padding: 2px;
}
.py-5 {
	padding-top: 1.25rem;
	padding-bottom: 1.25rem;
}
.px-5 {
	padding-left: 1.25rem;
	padding-right: 1.25rem;
}
.py-3 {
	padding-top: 0.75rem;
	padding-bottom: 0.75rem;
}
.py-20 {
	padding-top: 5rem;
	padding-bottom: 5rem;
}
.py-\[7px\] {
	padding-top: 7px;
	padding-bottom: 7px;
}
.px-10 {
	padding-left: 2.5rem;
	padding-right: 2.5rem;
}
.py-2 {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}
.px-3 {
	padding-left: 0.75rem;
	padding-right: 0.75rem;
}
.px-1 {
	padding-left: 0.25rem;
	padding-right: 0.25rem;
}
.py-\[1px\] {
	padding-top: 1px;
	padding-bottom: 1px;
}
.px-4 {
	padding-left: 1rem;
	padding-right: 1rem;
}
.py-4 {
	padding-top: 1rem;
	padding-bottom: 1rem;
}
.px-14 {
	padding-left: 3.5rem;
	padding-right: 3.5rem;
}
.px-2 {
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}
.py-\[10px\] {
	padding-top: 10px;
	padding-bottom: 10px;
}
.px-6 {
	padding-left: 1.5rem;
	padding-right: 1.5rem;
}
.py-16 {
	padding-top: 4rem;
	padding-bottom: 4rem;
}
.px-\[15px\] {
	padding-left: 15px;
	padding-right: 15px;
}
.px-\[3px\] {
	padding-left: 3px;
	padding-right: 3px;
}
.py-\[2px\] {
	padding-top: 2px;
	padding-bottom: 2px;
}
.pt-5 {
	padding-top: 1.25rem;
}
.pt-6 {
	padding-top: 1.5rem;
}
.pt-\[100\%\] {
	padding-top: 100%;
}
.pl-5 {
	padding-left: 1.25rem;
}
.pr-9 {
	padding-right: 2.25rem;
}
.pr-4 {
	padding-right: 1rem;
}
.pr-2 {
	padding-right: 0.5rem;
}
.pl-1 {
	padding-left: 0.25rem;
}
.pl-\[6px\] {
	padding-left: 6px;
}
.pr-10 {
	padding-right: 2.5rem;
}
.pl-4 {
	padding-left: 1rem;
}
.pr-\[10px\] {
	padding-right: 10px;
}
.pt-\[1px\] {
	padding-top: 1px;
}
.pb-\[5px\] {
	padding-bottom: 5px;
}
.pt-1 {
	padding-top: 0.25rem;
}
.pb-\[2px\] {
	padding-bottom: 2px;
}
.text-center {
	text-align: center;
}
.text-right {
	text-align: right;
}
.text-sm {
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.text-2xl {
	font-size: 1.5rem;
	line-height: 2rem;
}
.text-xs {
	font-size: 0.75rem;
	line-height: 1rem;
}
.text-\[17px\] {
	font-size: 17px;
}
.text-xl {
	font-size: 1.25rem;
	line-height: 1.75rem;
}
.text-\[13px\] {
	font-size: 13px;
}
.text-3xl {
	font-size: 1.875rem;
	line-height: 2.25rem;
}
.text-lg {
	font-size: 1.125rem;
	line-height: 1.75rem;
}
.text-\[26px\] {
	font-size: 26px;
}
.text-\[10px\] {
	font-size: 10px;
}
.text-\[8px\] {
	font-size: 8px;
}
.font-medium {
	font-weight: 500;
}
.font-normal {
	font-weight: 400;
}
.font-light {
	font-weight: 300;
}
.uppercase {
	text-transform: uppercase;
}
.capitalize {
	text-transform: capitalize;
}
.leading-\[18\] {
	line-height: 18;
}
.leading-5 {
	line-height: 1.25rem;
}
.leading-\[48px\] {
	line-height: 48px;
}
.leading-4 {
	line-height: 1rem;
}
.leading-none {
	line-height: 1;
}
.text-gray-500 {
	--tw-text-opacity: 1;
	color: rgba(107, 114, 128, var(--tw-text-opacity));
}
.text-gray-600 {
	--tw-text-opacity: 1;
	color: rgba(75, 85, 99, var(--tw-text-opacity));
}
.text-primary {
	color: var(--primary-color);
}
.text-white {
	--tw-text-opacity: 1;
	color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.text-gray-400 {
	--tw-text-opacity: 1;
	color: rgba(156, 163, 175, var(--tw-text-opacity));
}
.text-gray-300 {
	--tw-text-opacity: 1;
	color: rgba(209, 213, 219, var(--tw-text-opacity));
}
.text-black {
	--tw-text-opacity: 1;
	color: rgba(0, 0, 0, var(--tw-text-opacity));
}
.text-yellow-400 {
	--tw-text-opacity: 1;
	color: rgba(251, 191, 36, var(--tw-text-opacity));
}
.text-\[\#d0011b\] {
	--tw-text-opacity: 1;
	color: rgba(208, 1, 27, var(--tw-text-opacity));
}
.text-red-500 {
	--tw-text-opacity: 1;
	color: rgba(239, 68, 68, var(--tw-text-opacity));
}
.text-current {
	color: currentColor;
}
.text-gray-700 {
	--tw-text-opacity: 1;
	color: rgba(55, 65, 81, var(--tw-text-opacity));
}
.line-through {
	text-decoration: line-through;
}
.opacity-0 {
	opacity: 0;
}
.opacity-90 {
	opacity: 0.9;
}
.shadow-sm {
	--tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.filter {
	filter: var(--tw-filter);
}
.duration-200 {
	transition-duration: 200ms;
}

:root {
  --primary-color: #f94c2f;
  --primary-color-80: #fe6232;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes scaleIn {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(1);
  }
}

.header {
  background-image: linear-gradient(180deg, var(--primary-color), var(--primary-color-80));
}

.header__popup-notifications, .header__popup-cart {
  top: calc(100% + 8px);
  transform-origin: calc(100% - 32px) top;
  animation: fadeIn 0.2s linear, scaleIn 0.2s linear;
}

.header__popup-notifications::before, .header__popup-cart::before {
  content: '';
  position: absolute;
  top: -10px;
  border-width: 0 20px 16px;
  border-style: solid;
  border-color: transparent transparent #fcfcfc;
  z-index: -1;
}

.header__popup-notifications.notifications::before {
  right: 24px;
}

.header__popup-cart.cart::before {
  right: 12px;
}

.header__popup-notifications::after, .header__popup-cart::after {
  content: '';
  position: absolute;
  right: 0;
}

.header__popup-notifications.notifications::after {
  top: -10px;
  width: 100px;
  height: 12px;
}

.header__popup-cart.cart::after {
  top: -12px;
  width: 100px;
  height: 20px;
}

.header__popup-notifications > ul::-webkit-scrollbar-thumb {
  background-color: #ccc;
  border-radius: 12px;
}

.header__popup-notifications > ul::-webkit-scrollbar {
  width: 10px;
}

.header__popup-account {
  --position-before: 26px;
  top: calc(100% + 6px);
  transform-origin: calc(100% - var(--position-before)) top;
  animation: fadeIn 0.2s linear, scaleIn 0.2s linear;
}

.header__popup-account::before {
  content: '';
  position: absolute;
  top: -8px;
  right: var(--position-before);
  border-width: 0 16px 8px;
  border-style: solid;
  border-color: transparent transparent #fff;
}

.header__popup-account::after {
  content: '';
  position: absolute;
  top: -7px;
  width: 100%;
  height: 8px;
}

.header__input-search:focus + .header__history-search {
  opacity: 1;
  visibility: visible;
}

.header__popup-in-shop::before {
  content: '';
  position: absolute;
  top: -5px;
  right: 0;
  width: 100%;
  height: 8px;
}

/* Product */
.label-like-product::before {
  content: '';
  position: absolute;
  top: 100%;
  left: 0;
  border-top: 4px solid currentColor;
  border-left: 4px solid transparent;
  filter: brightness(80%);
}

.label-discount-product {
  --bg-color: rgba(255, 216, 57, 0.9);
  background-color: var(--bg-color);
}

.label-discount-product::after {
  --height: 4px;
  content: '';
  position: absolute;
  bottom: calc(-1 * var(--height));
  left: 0;
  border-width: 0 18px var(--height);
  border-style: solid;
  border-color: transparent var(--bg-color);
}

/* Check box */
.wrap-checkbox input[type="checkbox"]:checked ~ span {
  display: inline-block;
}

.wrap-checkbox > span::after {
  content: '';
  position: absolute;
  top: 2px;
  left: 6px;
  width: 4px;
  height: 8px;
  border-width: 0 2px 2px 0;
  border-color: #fff;
  box-sizing: content-box;
  transform: rotate(45deg);
}

/* Category */
.category__item.active {
  color: var(--primary-color);
}

.category__item.active::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  border: 4px solid;
  border-color: transparent transparent transparent var(--primary-color);
}

.placeholder-shown\:text-sm:placeholder-shown {
	font-size: 0.875rem;
	line-height: 1.25rem;
}

.hover\:translate-y-\[-2px\]:hover {
	--tw-translate-y: -2px;
	transform: var(--tw-transform);
}

.hover\:bg-\[\#ffc5b22e\]:hover {
	background-color: #ffc5b22e;
}

.hover\:bg-gray-100:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
}

.hover\:bg-gray-50:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(249, 250, 251, var(--tw-bg-opacity));
}

.hover\:text-primary:hover {
	color: var(--primary-color);
}

.hover\:text-green-400:hover {
	--tw-text-opacity: 1;
	color: rgba(52, 211, 153, var(--tw-text-opacity));
}

.hover\:text-opacity-80:hover {
	--tw-text-opacity: 0.8;
}

.hover\:opacity-90:hover {
	opacity: 0.9;
}

.hover\:opacity-80:hover {
	opacity: 0.8;
}

.focus\:outline-none:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}